#+TITLE: =get_roles_of_user= route of the =Engine= component
#+AUTHOR: VLEAD
#+DATE: [2017-07-10 Mon]
#+SETUPFILE: ../../../../org-templates/level-4.org
#+TAGS: boilerplate(b)
#+EXCLUDE_TAGS: boilerplate
#+OPTIONS: ^:nil

* Introduction  

  This is the specification and implementation of the =get_roles_of_user= route of the
  =Engine= component.


* Implementation

** Imports and class =GetRoles=
#+BEGIN_SRC python :tangle get_roles_of_user.py
import traceback

from runtime.datatypes.cmd.cmd import Cmd
from runtime.objects.user.user import User

class GetRoles:

#+END_SRC

** The type structure of the =get_roles_of_user= route

   The =get_roles_of_user= route is a dictionary with 'cmd' equal to =Cmd.get_roles_of_user=
   and a 'session' that is an instance of =Session=.

** The =do= method
The =do= method performs the del operation on the entities.  Should return a
dictionary with 'result' as the rolelist of user after deletion and 'instr' as the instruction
passed.

#+BEGIN_SRC python :tangle get_roles_of_user.py
    @staticmethod 
    def do(obj, instr):
        print "get_roles_of_user: %s" % instr
        userlist = obj.em.get_all(User)
        for i in range(len(userlist)):
            if userlist[i]== instr['data']['user']:
                roles=userlist[i].get('roles')
                return {'instr': instr, 'result': roles}


#+END_SRC


* Package														:boilerplate:
#+BEGIN_SRC python :eval no :tangle __init__.py
print "runtime.components.engine.get_roles_of_user package"
#+END_SRC

