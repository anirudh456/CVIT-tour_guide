#+title: Test that invoked the =do= method without any failure
#+AUTHOR: VLEAD
#+DATE: [2017-07-3 Mon]
#+SETUPFILE: ../../../../../org-templates/level-5.org
#+TAGS: boilerplate(b)
#+EXCLUDE_TAGS: boilerplate
#+OPTIONS: ^:nil

* Test
  =TestDelRole= object holds an instance of the =DelRole= component against the
  field =component=.  This test invokes the =do= method on the component.

** Imports
#+BEGIN_SRC python :tangle test_do_passes.py
import unittest
from runtime.objects.role.role import Role
from runtime.objects.session.session import Session
from runtime.components.engine.del_role.tests.harness import TestHarness
from runtime.datatypes.cmd.cmd import Cmd

#+END_SRC


** Test Case

   Imports the TestHarness which sets up the component.  This test creates an
   instruction with cmd =del_role= and an existing session.  The engine's do
   method succeeds and returns the instruction and result of the operation as
   result.

#+BEGIN_SRC python :tangle test_do_passes.py
class TestDoPasses(TestHarness):

    def test_do_passes(self):
        print "test_do_passes"
        session = self.session
        instr = {'cmd': Cmd.del_role, 
                 'session': session, 
                 'data': {'user': self.d_user,
                          'delrole': Role.admin}
        }
        engine = self.component
        result = engine.do(instr)
        self.assertEqual(result['result'], [Role.user])

#+END_SRC

